services:

  cassandra:
    image: cassandra:latest
    container_name: cassandra-container
    ports:
      - "9042:9042"
    # environment:
      # - CASSANDRA_USER=andra
      # - CASSANDRA_PASSWORD=andra
    volumes:
      - cassandra-data:/var/lib/cassandra
    networks:
      project-network:
        ipv4_address: 10.0.0.2

  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    networks:
      project-network:
        ipv4_address: 10.0.0.3
    volumes:
      - backend:/sqlite3
      - ./backend/app:/app/app
      - ./backend/backend:/app/backend
      - ./backend/tweets:/app/tweets
      - ./backend/logs:/app/logs
    
  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    networks:
      project-network:
        ipv4_address: 10.0.0.4
    volumes:
      - ./frontend/src:/app/src

  elasticsearch:
    image:  docker.elastic.co/elasticsearch/elasticsearch:8.13.0
    container_name: elasticsearch
    environment:
      - CLI_JAVA_OPTS=-Xms2g -Xmx2g
      - bootstrap.memory_lock=true
      - discovery.type=single-node
      - xpack.security.enabled=false
      - xpack.security.enrollment.enabled=false

    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      project-network:
        ipv4_address: 10.0.0.5
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    
  seaweedfs-master:
    image: chrislusf/seaweedfs
    container_name: seaweedfs-master
    ports:
      - "9333:9333"
    command: 'master'
    networks:
      project-network:
        ipv4_address: 10.0.0.6
    volumes:
      - seaweedfs-master-data:/data
    
  seaweedfs-volume:
    image: chrislusf/seaweedfs
    container_name: seaweedfs-volume
    ports:
      - "8080:8080"
    command: 'volume -mserver="seaweedfs-master:9333" -port=8080'
    depends_on:
      - seaweedfs-master
    networks:
      project-network:
        ipv4_address: 10.0.0.7
    volumes:
      - seaweedfs-volume-data:/data
  
  zookeeper:
    image: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    networks:
      project-network:
        ipv4_address: 10.0.0.8
        

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092
    #   # ,OUTSIDE://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
    #   KAFKA_LISTENERS: INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    #   # KAFKA_CREATE_TOPICS: "notification"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    networks:
      project-network:
        ipv4_address: 10.0.0.9
    
volumes:
  cassandra-data:
  backend:
  elasticsearch-data:
  seaweedfs-master-data:
  seaweedfs-volume-data:
  

networks:
  project-network:
    driver: bridge
    ipam:
     config:
       - subnet: 10.0.0.0/28
         gateway: 10.0.0.1