events { }

http {
    upstream filer {
        server seaweedfsfiler:8888;
    }

    upstream backend {
        server backend:8000;
    }

    server {
        listen 1234;
        
        location / {
            # auth_request /auth;
            # auth_request_set $auth_status $upstream_status;

            proxy_pass http://filer;
            # proxy_set_header Host $host;
            # proxy_set_header X-Real-IP $remote_addr;
            # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            # proxy_set_header X-Forwarded-Proto $scheme;
            # proxy_set_header Authorization $http_authorization;
            proxy_set_header 'Access-Control-Allow-Origin' '*';
            # add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            # if ($request_method = 'OPTIONS') {
            #     add_header 'Access-Control-Allow-Credentials' 'true';
            #     return 204;
            # }

            error_page 401 = @error401;
        }
        
        # location /backend {
        #     proxy_pass http://backend;
        #     proxy_set_header Host $host;
        #     proxy_set_header X-Real-IP $remote_addr;
        #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        #     proxy_set_header X-Forwarded-Proto $scheme;
        # }

        location /auth {
            internal;
            proxy_pass http://backend/auth;
            # proxy_set_header Host $host;
            # proxy_set_header X-Real-IP $remote_addr;
            # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            # proxy_set_header X-Forwarded-Proto $scheme;
            # proxy_set_header Authorization $http_authorization;
        }


        # location /tweets {
        #     auth_request /auth;
        #     auth_request_set $auth_status $upstream_status;

        #     proxy_pass http://filer/tweets;
        #     proxy_set_header Host $host;
        #     proxy_set_header X-Real-IP $remote_addr;
        #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        #     proxy_set_header X-Forwarded-Proto $scheme;
        #     proxy_set_header Authorization $http_authorization;
        # }

        location @error401 {
            return 401;
        }
    }
}
